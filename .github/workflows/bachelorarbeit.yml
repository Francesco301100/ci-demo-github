on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME_BACKEND: simonettifr/backend
  IMAGE_NAME_FRONTEND: simonettifr/frontend

jobs:
  backend_build:
    runs-on: ubuntu-latest
    container: maven:3.9-eclipse-temurin-17
    steps:
      - uses: actions/checkout@v4
      - run: cd backend && mvn package -DskipTests

  frontend_build:
    runs-on: ubuntu-latest
    container: node:20
    steps:
      - uses: actions/checkout@v4
      - run: cd frontend && npm ci && npm run build

  backend_test:
    runs-on: ubuntu-latest
    needs: backend_build
    container: maven:3.9-eclipse-temurin-17
    steps:
      - uses: actions/checkout@v4
      - run: cd backend && mvn test

  frontend_test:
    runs-on: ubuntu-latest
    needs: frontend_build
    container: node:20
    steps:
      - uses: actions/checkout@v4
      - run: cd frontend && npm ci && npm run test

  sonar_backend:
    runs-on: ubuntu-latest
    container: maven:3.9-eclipse-temurin-17
    needs: backend_test
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: cd backend && mvn -B clean verify sonar:sonar
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  sonar_frontend:
    name: SonarQube
    needs: frontend_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  docker_backend:
    runs-on: ubuntu-latest
    needs: sonar_backend
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ env.IMAGE_NAME_BACKEND }}:latest

  docker_frontend:
    runs-on: ubuntu-latest
    needs: sonar_frontend
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ env.IMAGE_NAME_FRONTEND }}:latest


  benachrichtigung:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [backend_build, frontend_build, backend_test, frontend_test, sonar_backend, sonar_frontend, docker_backend, docker_frontend]
    steps:
      - uses: dawidd6/action-send-mail@v6
        if: ${{ contains(needs.*.result, 'failure') }}
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          from: ${{ secrets.EMAIL_FROM }}
          to: ${{ secrets.EMAIL_TO}}
          subject: "Fehlgeschlagen: ${{ github.repository }}"
          body: "Die Pipeline ist fehlgeschlagen"

